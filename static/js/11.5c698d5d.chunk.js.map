{"version":3,"sources":["../../src/index.ts","../../../src/hooks/useDragDropManager.ts","../../../src/hooks/useIsomorphicLayoutEffect.ts","../../../src/hooks/useOptionalFactory.ts","../../../src/internals/wrapConnectorHooks.ts","../../../src/internals/isRef.ts","../../../src/hooks/useMonitorOutput.ts","../../../src/hooks/useCollector.ts","../../../src/hooks/useCollectedProps.ts","../../../src/core/DndContext.ts","../node_modules/fast-deep-equal/index.js","../../src/makeRequestCall.ts","../../../src/utils/js_utils.ts","../../src/EnterLeaveCounter.ts","../../../src/NativeDragSources/NativeDragSource.ts","../../src/NativeTypes.ts","../../../src/NativeDragSources/getDataFromDataTransfer.ts","../../../src/NativeDragSources/nativeTypesConfig.ts","../../../src/NativeDragSources/index.ts","../../src/BrowserDetector.ts","../../src/MonotonicInterpolant.ts","../../src/OffsetUtils.ts","../../src/OptionsReader.ts","../../src/HTML5BackendImpl.ts","../../../src/internals/registration.ts","../../../src/core/DndProvider.tsx","../../../src/actions/dragDrop/types.ts","../../../src/actions/dragDrop/local/setClientOffset.ts","../../../src/actions/dragDrop/beginDrag.ts","../../../src/actions/dragDrop/drop.ts","../../../src/actions/dragDrop/endDrag.ts","../../../src/utils/matchesType.ts","../../../src/actions/dragDrop/hover.ts","../../../src/actions/dragDrop/publishDragSource.ts","../../../src/classes/DragDropManagerImpl.ts","../../../src/actions/dragDrop/index.ts","../../../src/utils/coords.ts","../../../src/utils/dirtiness.ts","../../../src/classes/DragDropMonitorImpl.ts","../../src/AsapQueue.ts","../../src/RawTask.ts","../../src/TaskFactory.ts","../../src/asap.ts","../../../src/actions/registry.ts","../../src/interfaces.ts","../../src/contracts.ts","../../../src/utils/getNextUniqueId.ts","../../../src/classes/HandlerRegistryImpl.ts","../../../src/utils/equality.ts","../../../src/reducers/dirtyHandlerIds.ts","../../../src/reducers/dragOffset.ts","../../../src/reducers/dragOperation.ts","../../../src/reducers/refCount.ts","../../../src/reducers/stateId.ts","../../../src/reducers/index.ts","../../src/createDragDropManager.ts","../../../src/hooks/useDrag/connectors.ts","../../../src/internals/SourceConnector.ts","../../../src/internals/DragSourceMonitorImpl.ts","../../../src/hooks/useDrag/DragSourceImpl.ts","../../../src/hooks/useDrag/useRegisteredDragSource.ts","../../../src/hooks/useDrag/useDragSource.ts","../../../src/hooks/useDrag/useDragType.ts","../../../src/hooks/useDrag/useDrag.ts","../../../src/hooks/useDrag/useDragSourceMonitor.ts","../../../src/hooks/useDrag/useDragSourceConnector.ts","../../../src/hooks/useDrop/connectors.ts","../../../src/internals/TargetConnector.ts","../../../src/internals/DropTargetMonitorImpl.ts","../../../src/hooks/useDrop/DropTargetImpl.ts","../../../src/hooks/useDrop/useRegisteredDropTarget.ts","../../../src/hooks/useDrop/useDropTarget.ts","../../../src/hooks/useDrop/useAccept.ts","../../../src/hooks/useDrop/useDrop.ts","../../../src/hooks/useDrop/useDropTargetMonitor.ts","../../../src/hooks/useDrop/useDropTargetConnector.ts"],"names":["invariant","condition","format","args","isProduction","undefined","Error","error","argIndex","replace","name","framesToPop","process","useDragDropManager","dragDropManager","useContext","DndContext","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","useOptionalFactory","arg","deps","memoDeps","push","useMemo","shallowEqual","objA","objB","compare","compareContext","compareResult","call","keysA","Object","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","valueA","valueB","throwIfCompositeComponentElement","element","type","displayName","wrapConnectorHooks","hooks","wrappedHooks","forEach","hook","endsWith","wrappedHook","elementOrNode","options","isValidElement","node","ref","cloneWithRef","wrapHookToRecognizeElement","setRef","current","newRef","previousRef","cloneElement","isRef","obj","useMonitorOutput","monitor","collect","onCollect","onUpdate","useState","collected","setCollected","updateCollected","useCallback","nextValue","equal","useCollector","handlerId","getHandlerId","subscribeToStateChange","handlerIds","useCollectedProps","collector","connector","reconnect","createContext","module","exports","a","b","constructor","i","Array","isArray","RegExp","source","flags","valueOf","toString","scope","global","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","setTimeout","handleTimer","intervalHandle","setInterval","clearTimeout","clearInterval","makeRequestCall","toggle","observer","document","createTextNode","observe","characterData","data","memoize","fn","result","EnterLeaveCounter","isNodeInDocument","entered","this","enter","enteringNode","previousLength","itemsA","itemsB","set","Set","insertItem","item","add","union","filter","contains","leave","leavingNode","items","reset","NativeDragSource","config","initializeExposedProperties","exposeProperties","property","defineProperty","configurable","enumerable","get","console","warn","loadDataTransfer","dataTransfer","newProperties","propertyFn","value","matchesTypes","defineProperties","canDrag","beginDrag","isDragging","handle","getSourceId","endDrag","FILE","URL","TEXT","HTML","getDataFromDataTransfer","typesToTry","defaultValue","reduce","resultSoFar","typeToTry","getData","nativeTypesConfig","NativeTypes","files","slice","html","urls","split","text","matchNativeItemType","dataTransferTypes","types","nativeItemType","typeConfig","some","t","indexOf","isFirefox","test","navigator","userAgent","isSafari","Boolean","safari","MonotonicInterpolant","xs","ys","indexes","sort","dx","dy","dys","dxs","ms","c1s","m2","mNext","dxNext","common","m","c2s","c3s","c1","invDx","interpolate","x","mid","low","high","xHere","Math","floor","diff","max","diffSq","getNodeClientOffset","el","nodeType","parentElement","getBoundingClientRect","top","left","y","getEventClientOffset","e","clientX","clientY","getDragPreviewOffset","sourceNode","dragPreview","clientOffset","anchorPoint","offsetPoint","isImage","nodeName","documentElement","isImageNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","sourceWidth","offsetWidth","sourceHeight","offsetHeight","anchorX","anchorY","dragPreviewWidth","width","dragPreviewHeight","height","devicePixelRatio","getDragPreviewSize","offsetX","offsetY","isManualOffsetY","calculateYOffset","OptionsReader","globalContext","ownerDocument","optionsArgs","rootElement","HTML5BackendImpl","manager","sourcePreviewNodes","Map","sourcePreviewNodeOptions","sourceNodes","sourceNodeOptions","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","currentNativeSource","currentNativeHandle","currentDragSourceNode","altKeyPressed","mouseMoveTimeoutTimer","asyncEndDragFrameId","dragOverTargetIds","lastClientOffset","hoverRafId","getSourceClientOffset","sourceId","endDragNativeItem","isDraggingNativeItem","actions","registry","removeSource","body","endDragIfSourceWasRemovedFromDOM","clearCurrentDragSourceNode","cancelHover","scheduleHover","requestAnimationFrame","hover","cancelAnimationFrame","handleTopDragStartCapture","handleTopDragStart","defaultPrevented","publishSource","nativeType","setDragImage","getCurrentSourcePreviewNodeOptions","dragPreviewOffset","setData","err","setCurrentDragSourceNode","target","captureDraggingState","publishDragSource","beginDragNativeItem","hasAttribute","preventDefault","handleTopDragEndCapture","handleTopDragEnterCapture","enterLeaveCounter","handleTopDragEnter","altKey","targetId","canDropOnTarget","dropEffect","getCurrentDropEffect","handleTopDragOverCapture","handleTopDragOver","handleTopDragLeaveCapture","handleTopDropCapture","handleTopDrop","drop","handleSelectStart","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","profile","size","setup","root","__isReactDndBackendSetUp","addEventListeners","teardown","removeEventListeners","connectDragPreview","delete","connectDragSource","handleDragStart","setAttribute","addEventListener","removeEventListener","connectDropTarget","handleDragEnter","handleDragOver","handleDrop","getCurrentSourceNodeOptions","itemType","getItemType","createNativeDragSource","addSource","unshift","_e","HTML5Backend","context","registerTarget","addTarget","removeTarget","registerSource","refCount","INSTANCE_SYM","Symbol","for","DndProvider","memo","children","props","backend","getGlobalContext","debugMode","ctx","createDragDropManager","createSingletonDndContext","isGlobalInstance","getDndContextValue","Provider","path","c","without","isObject","input","xor","map","has","count","INIT_COORDS","BEGIN_DRAG","PUBLISH_DRAG_SOURCE","HOVER","DROP","END_DRAG","setClientOffset","sourceClientOffset","payload","ResetCoordinatesAction","createBeginDrag","sourceIds","dispatch","verifyInvariants","getDraggableSource","verifyGetSourceClientOffsetIsFunction","getSource","verifyItemIsObject","pinSource","getSourceType","isSourcePublic","canDragSource","createDrop","targetIds","getDroppableTargets","index","dropResult","determineDropResult","action","didDrop","getTarget","verifyDropResultType","getDropResult","getTargetIds","reverse","createEndDrag","verifyIsDragging","unpinSource","matchesType","targetType","draggedItemType","createHover","targetIdsArg","verifyTargetIdsIsArray","removeNonMatchingTargetIds","checkInvariants","hoverAllTargets","lastIndexOf","getTargetType","splice","createPublishDragSource","DragDropManagerImpl","store","isSetUp","handleRefCountChange","shouldSetUp","getState","subscribe","receiveBackend","getBackend","createDragDropActions","boundActions","actionCreator","apply","subtract","NONE","ALL","areDirty","dirtyIds","__IS_NONE__","__IS_ALL__","DragDropMonitorImpl","listener","prevStateId","stateId","handleChange","state","currentStateId","dirtyHandlerIds","subscribeToOffsetChange","previousState","dragOffset","nextState","canDrop","isDraggingSource","isOverTarget","shallow","dragOperation","getItem","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","AsapQueue","queue","pendingErrors","flushing","capacity","flush","q","currentIndex","scan","newLength","registerPendingError","requestErrorThrow","requestFlush","shift","enqueueTask","task","RawTask","onError","release","TaskFactory","freeTasks","create","tasks","pop","asapQueue","taskFactory","ADD_SOURCE","ADD_TARGET","REMOVE_SOURCE","REMOVE_TARGET","validateType","allowArray","HandlerRole","SOURCE","TARGET","nextUniqueId","getNextHandlerId","role","id","parseRoleFromHandlerId","mapContainsValue","searchValue","entries","isDone","next","done","HandlerRegistryImpl","dragSources","dropTargets","pinnedSourceId","pinnedSource","validateSourceContract","addHandler","validateTargetContract","containsHandler","handler","includePinned","isSourceId","isPinned","isTargetId","strictEquality","areCoordsEqual","offsetA","offsetB","areArraysEqual","isEqual","prevTargetIds","didChange","prevInnermostTargetId","innermostTargetId","initialState","backendFactory","backendOptions","makeStoreInstance","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","instanceId","useConnectDragSource","dragSource","useConnectDragPreview","SourceConnector","clearDragSource","dragSourceOptions","dragSourceRef","dragSourceNode","reconnectDragSource","clearDragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","receiveHandlerId","newHandlerId","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","internalMonitor","DragSourceImpl","spec","globalMonitor","end","useRegisteredDragSource","useDragSource","useDragType","unregister","useDrag","specArg","begin","useDragSourceMonitor","useDragSourceConnector","previewOptions","useConnectDropTarget","dropTarget","TargetConnector","clearDropTarget","dropTargetOptions","dropTargetRef","dropTargetNode","dropTargetOptionsInternal","lastConnectedDropTarget","lastConnectedDropTargetOptions","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","isCallingCanDrop","DropTargetMonitorImpl","isOver","DropTargetImpl","useRegisteredDropTarget","useDropTarget","accept","useAccept","join","useDrop","useDropTargetMonitor","useDropTargetConnector"],"mappings":"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","file":"static/js/11.5c698d5d.chunk.js","sourcesContent":["export * from './asap.js'\nexport * from './AsapQueue.js'\nexport * from './TaskFactory.js'\nexport * from './types.js'\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n","// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n","import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n","import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n","export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n","export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n","import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n","import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n","import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n","export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n","import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n","import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n","import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n","import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n","import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n","import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n","import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n","import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n","/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n","import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n","import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n","import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n","export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n","let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n","import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n","import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n","import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n"],"sourceRoot":""}