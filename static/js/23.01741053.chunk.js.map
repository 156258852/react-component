{"version":3,"sources":["views/dnd/Card.jsx","views/dnd/index.jsx"],"names":["style","width","height","margin","backgroundColor","Card","id","text","index","moveCard","ref","useRef","useDrag","type","item","collect","monitor","isDragging","drag","useDrop","accept","hover","dragIndex","hoverIndex","current","getBoundingClientRect","top","halfOfHoverHeight","bottom","hoverClientY","getClientOffset","y","drop","opacity","YourApp","useState","cards","setCards","dragCard","_cards","splice","DndProvider","backend","HTML5Backend","map","it","i","src"],"mappings":"0OAMMA,EAAQ,CACZC,MAAO,QACPC,OAAQ,OACRC,OAAQ,MACRC,gBAAiB,OAgDJC,MA7Cf,SAAc,GAAgC,IAA9BC,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SACzBC,EAAMC,mBAEZ,EAA6BC,YAAQ,CACnCC,KAAM,OACNC,KAAM,iBAAO,CAAER,KAAIE,QAAO,EAC1BO,QAAS,SAACC,GAAO,MAAM,CACrBC,WAAYD,EAAQC,aACrB,IACD,mBANKA,EAAU,KAAVA,WAAcC,EAAI,KAQzB,EAAeC,YAAQ,CACrBC,OAAQ,OACRL,QAAS,iBAAO,CAAC,CAAC,EAClBM,MAAK,SAACP,EAAME,GAEV,IAAIM,EAAYR,EAAKN,MAEjBe,EAAaf,EACjB,GAAIc,IAAcC,EAAlB,CACA,MAAwBb,EAAIc,QAAQC,wBAA5BC,EAAG,EAAHA,IACFC,GADa,EAANC,OACuBF,GAAO,EAErCG,EADQb,EAAQc,kBAAdC,EACiBL,GACpBJ,EAAYC,GAAcM,EAAeF,GAC3CL,EAAYC,GAAcM,EAAeF,KAE1ClB,EAASa,EAAWC,GACpBT,EAAKN,MAAQe,EATqB,CAatC,IArBKS,EAsBL,iBAtBS,GAwBXd,EAAKR,GACLsB,EAAKtB,GACL,IAAMuB,EAAUhB,EAAa,GAAK,EAClC,OACE,qBAAKjB,MAAK,2BAAOA,GAAK,IAAEiC,YAAWvB,IAAKA,EAAI,SACzCH,GAGP,ECnDe,SAAS2B,IACtB,IAKA,EAA0BC,mBAAS,CACjC,CAAE7B,GAAI,IAAKC,KAAM,iBACjB,CAAED,GAAI,IAAKC,KAAM,iBACjB,CAAED,GAAI,IAAKC,KAAM,mBACjB,mBAJK6B,EAAK,KAAEC,EAAQ,KAMhB5B,EAAW,SAACa,EAAWC,GAC3B,IAAMe,EAAWF,EAAMd,GACnBiB,EAAM,YAAOH,GACjBG,EAAOC,OAAOlB,EAAW,GACzBiB,EAAOC,OAAOjB,EAAY,EAAGe,GAC7BD,EAASE,EACX,EAEA,OACE,qCACE,cAACE,EAAA,EAAW,CAACC,QAASC,IAAa,SAE/BP,EAAMQ,KAAI,SAACC,EAAIC,GAAC,OACd,cAAC,EAAI,CAACvC,KAAMsC,EAAGtC,KAAkBC,MAAOsC,EAAGrC,SAAUA,GAA3BoC,EAAGvC,GAAoC,MAWvE,wBACEJ,OAAQ,IACRD,MAAO,IACP8C,IAAI,4DAOZ,C","file":"static/js/23.01741053.chunk.js","sourcesContent":["import { isDate } from 'moment'\r\nimport React from 'react'\r\nimport { useRef } from 'react'\r\n\r\nimport { useDrag, useDrop } from 'react-dnd'\r\n\r\nconst style = {\r\n  width: \"100px\",\r\n  height: \"30px\",\r\n  margin: \"5px\",\r\n  backgroundColor: \"red\"\r\n}\r\n\r\nfunction Card({ id, text, index, moveCard }) {\r\n  const ref = useRef()\r\n\r\n  let [{ isDragging }, drag] = useDrag({\r\n    type: \"CARD\",\r\n    item: () => ({ id, index }), //用来描述拖动源的js对象\r\n    collect: (monitor) => ({ //monitor监听器\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  let [, drop] = useDrop({\r\n    accept: \"CARD\",\r\n    collect: () => ({}),\r\n    hover(item, monitor) {\r\n      //获取当前拖动卡片的索引\r\n      let dragIndex = item.index\r\n      //当前正在hover卡片的索引\r\n      let hoverIndex = index\r\n      if (dragIndex === hoverIndex) return\r\n      const { top, bottom } = ref.current.getBoundingClientRect()\r\n      const halfOfHoverHeight = (bottom - top) / 2 //当前hover元素高度的一半\r\n      const { y } = monitor.getClientOffset() //相当于 e.clientY\r\n      const hoverClientY = y - top //表示鼠标距离目标原生顶部的距离\r\n      if ((dragIndex < hoverIndex && hoverClientY > halfOfHoverHeight) ||\r\n        (dragIndex > hoverIndex && hoverClientY < halfOfHoverHeight)\r\n      ) {\r\n        moveCard(dragIndex, hoverIndex);\r\n        item.index = hoverIndex //交换索引\r\n      }\r\n\r\n\r\n    }\r\n  })\r\n\r\n  drag(ref);\r\n  drop(ref)\r\n  const opacity = isDragging ? .1 : 1\r\n  return (\r\n    <div style={{ ...style, opacity }} ref={ref}>\r\n      {text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { useState } from 'react';\r\nimport Card from './Card';\r\n\r\nexport default function YourApp() {\r\n  const style = {\r\n    width: \"300px\",\r\n    height: \"300px\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  };\r\n  const [cards, setCards] = useState([\r\n    { id: \"1\", text: \"卡片1\" },\r\n    { id: \"2\", text: \"卡片2\" },\r\n    { id: \"3\", text: \"卡片3\" }\r\n  ])\r\n\r\n  const moveCard = (dragIndex, hoverIndex) => {\r\n    const dragCard = cards[dragIndex]\r\n    let _cards = [...cards]\r\n    _cards.splice(dragIndex, 1)\r\n    _cards.splice(hoverIndex, 0, dragCard)\r\n    setCards(_cards)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DndProvider backend={HTML5Backend}>\r\n        {\r\n          cards.map((it, i) => (\r\n            <Card text={it.text} key={it.id} index={i} moveCard={moveCard} />\r\n          ))\r\n        }\r\n\r\n      </DndProvider>\r\n      {/* <a href=\"http://10.52.0.150:8000/#/checkstand/topUp\"></a>\r\n      <button onClick={() => {\r\n        window.location.href = 'http://10.52.0.150:8000/#/checkstand/topUp?id=213'\r\n      }}>\r\n        +++\r\n      </button> */}\r\n      <iframe\r\n        height={500}\r\n        width={500}\r\n        src='https://syb.allinpay.com/apiweb/h5unionpay/unionorder'\r\n      // src='http://www.baidu.com'\r\n      />\r\n    </>\r\n\r\n  )\r\n\r\n}"],"sourceRoot":""}